import type { Element } from "MadUI"

import type { Instance } from "@/Parser/Documentation"
import type { State } from "@/State"

import { className, div, li, span, text } from "MadUI"

import { Description } from "@/Views/Description"
import { Etiquette } from "@/Views/Etiquette"
import { Example } from "@/Views/Example"
import { Since } from "@/Views/Since"
import { Title } from "@/Views/Title"



Instance :: String -> Instance -> Element State
export Instance = (moduleName, instanceDef) => {
  constraints = instanceDef.constraints
  constraintElements = if (constraints != "") {
    [<span>{constraints}</span>, <span className="highlight">{` => `}</span>]
  } else {
    []
  }

  return (
    <li className="definition">
      {...[
        Etiquette("Instance"),
        Title(
          instanceDef.declaration,
          { hasJS: false, hasLLVM: false, isAvailable: false },
          moduleName,
        ),
      ]}
      <div className="definition__interface">
        <span className="highlight">
          instance 
        </span>
        <span>
          {...constraintElements}
        </span>
        <span>
          {instanceDef.declaration}
        </span>
      </div>
      {...[Since(instanceDef), Description(instanceDef), Example(instanceDef)]}
    </li>
  )
}
