import L from "List"
import {
  Element,
  div,
  h3,
  li,
  link,
  to,
  className,
  text,
  span,
  ul
} from "MadUI"
import {} from "Compare"

import {
  Module,
  Expression
} from "../Parser/Documentation"

ModuleLink :: Module -> Element
ModuleLink = (module) =>
  <li className="side-menu__link-item">
    <link className="side-menu__link" to={`/${module.name}`}>
      <span className="side-menu__link-name">{module.name}</span>
    </link>
  </li>

FunctionLink :: <Expression, String> -> Element
FunctionLink = where is <f, moduleName>:
  <li className="side-menu__link-item">
    <link className="side-menu__link" to={`/${moduleName}/${f.name}`}>
      <span className="side-menu__link-name">{f.name}</span>
      <span className="side-menu__link-extra">{moduleName}</span>
    </link>

  </li>

FunctionLinks :: List Module -> List Element
FunctionLinks = pipe(
  chain((module) => pipe(
    .expressions,
    map((exp) => <exp, module.name>)
  )(module)),
  L.sortBy((a, b) => where(<a, b>)
    is <<{ name: nameA }, _>, <{ name: nameB }, _>>:
      compare(nameA, nameB)
  ),
  map(FunctionLink)
)

SideMenu :: List Module -> Element
export SideMenu = (modules) =>
  <div className="side-menu">
    <div className="side-menu__scrollbar-container">
      <h3 className="side-menu__title">MODULES</h3>
      <ul className="side-menu__link-list">
        {map(ModuleLink, modules)}
      </ul>
      <h3 className="side-menu__title">FUNCTIONS</h3>
      <ul className="side-menu__link-list">
        {FunctionLinks(modules)}
      </ul>
    </div>
  </div>
