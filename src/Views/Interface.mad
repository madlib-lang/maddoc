import type { Element } from "MadUI"
import type { State } from "@/State"

import {
  div,
  span,
  className,
  text,
  li
} from "MadUI"

import { Etiquette } from "@/Views/Etiquette"
import { Title } from "@/Views/Title"
import { Since } from "@/Views/Since"
import { Description } from "@/Views/Description"
import { Example } from "@/Views/Example"

import type { Interface } from "@/Parser/Documentation"


Interface :: String -> Interface -> Element State
export Interface = (moduleName, interfaceDef) => {
  methods      = interfaceDef.methods
  constraints  = interfaceDef.constraints
  constraintElements =
    if (constraints != "") {[
        <span>{constraints}</span>,
        <span className="highlight">{` => `}</span>
    ]} else { [] }

  return (
    <li className="definition">
      {...[
          Etiquette("Interface"),
          Title(
            interfaceDef.name,
            { hasJS: false, hasLLVM: false, isAvailable: false },
            moduleName
          )
      ]}
      <div className="definition__interface">
        <span className="highlight">interface </span>
        <span>{...constraintElements}</span>
        <span>{interfaceDef.name} {interfaceDef.vars}</span>
        <span className="highlight">{` {`}</span>
        <div>{...map((method) => <div>  {method}</div>, methods)}</div>
        <span className="highlight">{`}`}</span>
      </div>
      {...[
          Since(interfaceDef),
          Description(interfaceDef),
          Example(interfaceDef)
      ]}
    </li>
  )
}
