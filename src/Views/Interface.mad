import type { Element } from "MadUI"

import type { Interface } from "@/Parser/Documentation"
import type { State } from "@/State"

import { className, div, li, span, text } from "MadUI"

import { Description } from "@/Views/Description"
import { Etiquette } from "@/Views/Etiquette"
import { Example } from "@/Views/Example"
import { Since } from "@/Views/Since"
import { Title } from "@/Views/Title"



Interface :: String -> Interface -> Element State
export Interface = (moduleName, interfaceDef) => {
  methods = interfaceDef.methods
  constraints = interfaceDef.constraints
  constraintElements = if (constraints != "") {
    [<span>{constraints}</span>, <span className="highlight">{` => `}</span>]
  } else {
    []
  }

  return (
    <li className="definition">
      {...[
        Etiquette("Interface"),
        Title(interfaceDef.name, { hasJS: false, hasLLVM: false, isAvailable: false }, moduleName),
      ]}
      <div className="definition__interface">
        <span className="highlight">
          interface 
        </span>
        <span>
          {...constraintElements}
        </span>
        <span>
          {interfaceDef.name}
          {interfaceDef.vars}
        </span>
        <span className="highlight">
          {` {`}
        </span>
        <div>
          {...map((method) => <div>  {method}</div>, methods)}
        </div>
        <span className="highlight">
          {`}`}
        </span>
      </div>
      {...[Since(interfaceDef), Description(interfaceDef), Example(interfaceDef)]}
    </li>
  )
}
